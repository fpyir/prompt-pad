// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Agent         Agent[]
  Project       Project[]
  Template      Template[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Agent {
  id     Int    @id @default(autoincrement())
  name   String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  chats  Chat[]
}

model Project {
  id     Int    @id @default(autoincrement())
  title  String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  chats  Chat[]
}

model Chat {
  id        Int           @id @default(autoincrement())
  title     String
  agentId   Int
  agent     Agent         @relation(fields: [agentId], references: [id])
  projectId Int
  project   Project       @relation(fields: [projectId], references: [id])
  messages  ChatMessage[]
}

model ChatMessage {
  id      Int    @id @default(autoincrement())
  content String @db.Text
  chatId  Int
  chat    Chat   @relation(fields: [chatId], references: [id])
}

model Template {
  id      Int    @id @default(autoincrement())
  content String @db.Text
  userId  String
  user    User   @relation(fields: [userId], references: [id])
}
